package dev._2lstudios.exploitfixer.shared.exploit;

import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;

import dev._2lstudios.exploitfixer.shared.interfaces.IViolationModule;

public class ExploitPlayer {
    private final Map<IViolationModule, Double> violations;
    private final Collection<Collection<String>> punishmentsDone;
    private long lastViolation;
    private int channels;

    public ExploitPlayer() {
        this.violations = new HashMap<>();
        this.punishmentsDone = new HashSet<>();

        clear();
    }

    public void clear() {
        violations.clear();
        punishmentsDone.clear();
        setLastViolation(0);
        channels = 0;
    }

    public Collection<Collection<String>> getPunishmentsDone() {
        return punishmentsDone;
    }

    public long getLastViolation() {
        return lastViolation;
    }

    public void setLastViolation(final long lastViolation) {
        this.lastViolation = lastViolation;
    }

    public int getChannels() {
        return channels;
    }

    public int addChannels(final int channels) {
        return this.channels += channels;
    }

    public Map<IViolationModule, Double> getViolations() {
        return violations;
    }

    public double getViolations(final IViolationModule module) {
        return violations.getOrDefault(module, 0D);
    }
}