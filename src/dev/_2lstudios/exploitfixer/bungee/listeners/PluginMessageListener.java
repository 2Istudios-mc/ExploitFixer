package dev._2lstudios.exploitfixer.bungee.listeners;

import java.util.logging.Logger;

import net.md_5.bungee.api.connection.Connection;
import net.md_5.bungee.api.connection.ProxiedPlayer;
import net.md_5.bungee.api.event.PluginMessageEvent;
import net.md_5.bungee.api.plugin.Listener;
import net.md_5.bungee.api.plugin.Plugin;
import net.md_5.bungee.event.EventHandler;
import dev._2lstudios.exploitfixer.bungee.managers.ExploitPlayerManager;
import dev._2lstudios.exploitfixer.bungee.modules.NotificationsModule;
import dev._2lstudios.exploitfixer.bungee.instanceables.ExploitPlayer;
import dev._2lstudios.exploitfixer.bungee.managers.ModuleManager;
import dev._2lstudios.exploitfixer.bungee.modules.CustomPayloadModule;

public class PluginMessageListener implements Listener {
	private final Plugin plugin;
	private final CustomPayloadModule customPayloadModule;
	private final ExploitPlayerManager exploitPlayerManager;
	private final NotificationsModule notificationsModule;

	public PluginMessageListener(final Plugin plugin, final ModuleManager moduleManager) {
		this.plugin = plugin;
		this.customPayloadModule = moduleManager.getCustomPayloadModule();
		this.exploitPlayerManager = moduleManager.getExploitPlayerManager();
		this.notificationsModule = moduleManager.getNotificationsModule();
	}

	@EventHandler(priority = -128)
	public void onPluginMessage(final PluginMessageEvent event) {
		if (!event.isCancelled() && customPayloadModule.isEnabled()) {
			final Connection connection = event.getSender();

			if (connection instanceof ProxiedPlayer) {
				final Logger logger = plugin.getLogger();
				final ProxiedPlayer player = (ProxiedPlayer) connection;
				final ExploitPlayer exploitPlayer = exploitPlayerManager.get(player.getUniqueId(), player);
				final String tag = event.getTag(), playerName = player.getName();
				final double tagVls = customPayloadModule.getTagVls();

				if (tagVls > 0 && tag == null || tag.isEmpty()) {
					if (notificationsModule.isDebug()) {
						logger.info(playerName + " sent CUSTOM_PAYLOAD without TAG! Added vls: " + tagVls);
					}

					event.setCancelled(true);
					exploitPlayer.addVls(plugin, event, player, customPayloadModule, tagVls);
					return;
				} else {
					final byte[] data = event.getData();
					final int byteLength = data.length;

					if (byteLength > customPayloadModule.getDataBytes()) {
						if (notificationsModule.isDebug()) {
							logger.info("[PacketPlayInCustomPayload] Sent by " + playerName
									+ " got cancelled because its " + byteLength + " bytes long!");
						}

						event.setCancelled(true);
						exploitPlayer.addVls(plugin, event, player, customPayloadModule,
								customPayloadModule.getDataVls());
						return;
					} else if (tag.equals("MC|BEdit") || tag.equals("MC|BSign") || tag.equals("MC|BOpen")) {
						/*
						 * if (byteLength > customPayloadModule.getBookBytes()) { logger.info(playerName
						 * + " tried to send a " + tag +
						 * " custompayload packet without a book in hand!"); event.setCancelled(true);
						 * exploitPlayer.addVls(plugin, event, player, customPayloadModule,
						 * customPayloadModule.getBookVls()); return; } // WORK IN PROGRESS
						 */
					}

					exploitPlayer.addVls(plugin, event, player, customPayloadModule,
							customPayloadModule.getMultiplier(tag));
				}
			}
		}
	}
}
