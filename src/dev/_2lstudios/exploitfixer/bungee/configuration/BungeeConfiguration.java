package dev._2lstudios.exploitfixer.bungee.configuration;

import java.util.Collection;
import java.util.HashSet;

import dev._2lstudios.exploitfixer.shared.configuration.IConfiguration;
import net.md_5.bungee.config.Configuration;

public class BungeeConfiguration implements IConfiguration {
    private final Configuration configuration;

    public BungeeConfiguration(final Configuration configuration) {
        this.configuration = configuration;
    }

    @Override
    public IConfiguration getSection(final String path) {
        return new BungeeConfiguration(configuration.getSection(path));
    }

    @Override
    public Collection<String> getKeys() {
        return configuration.getKeys();
    }

    @Override
    public Collection<String> getStringList(final String path) {
        if (configuration.contains(path)) {
            return new HashSet<>(configuration.getStringList(path));
        } else {
            return null;
        }
    }

    @Override
    public String getString(final String path) {
        return configuration.getString(path);
    }

    @Override
    public double getDouble(final String path) {
        return configuration.getDouble(path);
    }

    @Override
    public long getLong(final String path) {
        return configuration.getLong(path);
    }

    @Override
    public int getInt(final String path) {
        return configuration.getInt(path);
    }

    @Override
    public boolean getBoolean(final String path) {
        return configuration.getBoolean(path);
    }

    @Override
    public boolean contains(final String path) {
        return configuration.contains(path);
    }

    @Override
    public Object getObject() {
        return configuration;
    }
}