package dev._2lstudios.exploitfixer.bungee.modules;

import net.md_5.bungee.api.ChatColor;
import net.md_5.bungee.api.CommandSender;
import net.md_5.bungee.api.chat.TextComponent;
import net.md_5.bungee.api.connection.ProxiedPlayer;
import net.md_5.bungee.config.Configuration;
import dev._2lstudios.exploitfixer.shared.interfaces.Module;

import java.util.Collection;
import java.util.HashSet;

public class NotificationsModule implements Module {
	private final CommandSender console;
	private final Collection<ProxiedPlayer> notifications = new HashSet<>();
	private boolean enabled, debug;
	private String message;

	public NotificationsModule(final CommandSender console, final Configuration configYml) {
		this.console = console;
		reload(configYml);
	}

	@Override
	public boolean isEnabled() {
		return this.enabled;
	}

	public boolean isDebug() {
		return this.debug;
	}

	public final void setNotifications(final ProxiedPlayer player, final boolean input) {
		if (input) {
			notifications.add(player);
		} else {
			notifications.remove(player);
		}
	}

	public final boolean isNotifications(final ProxiedPlayer player) {
		return notifications.contains(player);
	}

	public void sendNotification(final String check, final ProxiedPlayer player, final int violations) {
		if (enabled && player != null) {
			final TextComponent notification = new TextComponent(message.replace("%player%", player.getName())
					.replace("%check%", check).replace("%ping%", String.valueOf(player.getPing()))
					.replace("%vls%", String.valueOf(violations)));

			console.sendMessage(notification);

			for (final ProxiedPlayer player1 : getNotifications()) {
				player1.sendMessage(notification);
			}
		}
	}

	public final Collection<ProxiedPlayer> getNotifications() {
		return notifications;
	}

	public void reload(final Configuration configYml) {
		this.enabled = configYml.getBoolean("notifications.enabled");
		this.debug = configYml.getBoolean("notifications.debug");
		this.message = ChatColor.translateAlternateColorCodes('&', configYml.getString("notifications.message"));
	}

	@Override
	public String getName() {
		return "Notifications";
	}
}
