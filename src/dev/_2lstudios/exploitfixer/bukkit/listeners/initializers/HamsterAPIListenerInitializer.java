package dev._2lstudios.exploitfixer.bukkit.listeners.initializers;

import org.bukkit.plugin.Plugin;

import dev._2lstudios.exploitfixer.bukkit.listeners.ExploitFixerPostProcessListener;
import dev._2lstudios.exploitfixer.bukkit.listeners.ExploitFixerPreProcessListener;
import dev._2lstudios.exploitfixer.bukkit.managers.ModuleManager;
import dev._2lstudios.hamsterapi.HamsterAPI;
import dev._2lstudios.hamsterapi.handlers.PostProcessEventHandler;
import dev._2lstudios.hamsterapi.handlers.PreProcessEventHandler;

public class HamsterAPIListenerInitializer {
    private final HamsterAPI hamsterAPI;
    private final Plugin plugin;
    private final ModuleManager moduleManager;
    private ExploitFixerPreProcessListener exploitFixerPreProcessListener;
    private ExploitFixerPostProcessListener exploitFixerPostProcessListener;

    public HamsterAPIListenerInitializer(final Plugin plugin, final ModuleManager moduleManager) {
        this.hamsterAPI = HamsterAPI.getInstance();
        this.plugin = plugin;
        this.moduleManager = moduleManager;
    }

    public void start() {
        final PreProcessEventHandler preProcessEventHandler = hamsterAPI.getPreProcessEventHandler();
        final PostProcessEventHandler postProcessEventHandler = hamsterAPI.getPostProcessEventHandler();

        preProcessEventHandler.addListener(
                this.exploitFixerPreProcessListener = new ExploitFixerPreProcessListener(plugin, moduleManager), 0);
        postProcessEventHandler.addListener(
                this.exploitFixerPostProcessListener = new ExploitFixerPostProcessListener(plugin, moduleManager), 0);
    }

    public void stop() {
        final PreProcessEventHandler preProcessEventHandler = hamsterAPI.getPreProcessEventHandler();
        final PostProcessEventHandler postProcessEventHandler = hamsterAPI.getPostProcessEventHandler();

        preProcessEventHandler.removeListener(exploitFixerPreProcessListener);
        postProcessEventHandler.removeListener(exploitFixerPostProcessListener);
    }
}
