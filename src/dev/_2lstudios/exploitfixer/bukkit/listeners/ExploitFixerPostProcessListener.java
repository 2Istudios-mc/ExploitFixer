package dev._2lstudios.exploitfixer.bukkit.listeners;

import java.util.Map;
import java.util.logging.Logger;

import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;
import org.bukkit.plugin.Plugin;

import dev._2lstudios.exploitfixer.bukkit.managers.ModuleManager;
import dev._2lstudios.exploitfixer.bukkit.modules.ItemsFixModule;
import dev._2lstudios.exploitfixer.bukkit.modules.NotificationsModule;
import dev._2lstudios.hamsterapi.interfaces.PostProcessListener;
import dev._2lstudios.hamsterapi.wrappers.EventWrapper;
import dev._2lstudios.hamsterapi.wrappers.PacketWrapper;

public class ExploitFixerPostProcessListener implements PostProcessListener {
    private final Plugin plugin;
    private final NotificationsModule notificationsModule;
    private final ItemsFixModule itemsFixModule;

    public ExploitFixerPostProcessListener(final Plugin plugin, final ModuleManager moduleManager) {
        this.plugin = plugin;
        this.notificationsModule = moduleManager.getNotificationsModule();
        this.itemsFixModule = moduleManager.getItemsFixModule();
    }

    @Override
    public void onPacketReceive(final EventWrapper event) {
        if (!event.isCancelled()) {
            final PacketWrapper packetWrapper = event.getPacket();
            final Map<String, ItemStack> items = packetWrapper.getItems();

            if (itemsFixModule.isEnabled() && items.containsKey("b")) {
                final ItemStack itemStack = items.get("b");

                if (itemStack != null) {
                    final String materialName = itemStack.getType().toString();
                    String blocked = null;

                    for (final String blockedMaterial : itemsFixModule.getBlacklist()) {
                        if (materialName.equals(blockedMaterial)) {
                            itemStack.setType(Material.AIR);
                            itemStack.setItemMeta(null);
                            blocked = materialName;
                            break;
                        }
                    }

                    final ItemStack fixedItemStack = itemsFixModule.fixItem(itemStack);

                    packetWrapper.write("b", fixedItemStack);

                    if (notificationsModule.isDebug()) {
                        final Player player = event.getPlayer();
                        final Logger logger = plugin.getLogger();

                        if (player != null) {
                            if (blocked != null) {
                                logger.info(player.getName() + " had a creative item blocked by ExploiFixer! ("
                                        + blocked + ")");
                            } else {
                                logger.info(player.getName() + " had a creative item fixed by ExploiFixer!");
                            }
                        }
                    }
                }
            }
        }
    }

    @Override
    public void onPacketSend(final EventWrapper event) {
    }
}