package dev._2lstudios.exploitfixer.bukkit.listener;

import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.server.TabCompleteEvent;

import dev._2lstudios.exploitfixer.bukkit.exploit.BukkitExploitPlayer;
import dev._2lstudios.exploitfixer.bukkit.managers.ExploitPlayerManager;
import dev._2lstudios.exploitfixer.bukkit.managers.ModuleManager;
import dev._2lstudios.exploitfixer.shared.modules.CommandsModule;
import dev._2lstudios.hamsterapi.HamsterAPI;
import dev._2lstudios.hamsterapi.hamsterplayer.HamsterPlayer;
import dev._2lstudios.hamsterapi.hamsterplayer.HamsterPlayerManager;

public class TabCompleteListener implements Listener {
	private final HamsterPlayerManager hamsterPlayerManager;
	private final CommandsModule commandsModule;
	private final ExploitPlayerManager exploitPlayerManager;

	TabCompleteListener(final ModuleManager moduleManager) {
		this.hamsterPlayerManager = HamsterAPI.getInstance().getHamsterPlayerManager();
		this.commandsModule = moduleManager.getCommandsModule();
		this.exploitPlayerManager = moduleManager.getExploitPlayerManager();
	}

	@EventHandler(priority = EventPriority.LOWEST, ignoreCancelled = true)
	public void onPlayerCommand(final TabCompleteEvent event) {
		final CommandSender sender = event.getSender();

		if (sender instanceof Player) {
			final Player player = (Player) sender;
			final BukkitExploitPlayer exploitPlayer = exploitPlayerManager.get(player);

			if (commandsModule.isEnabled()) {
				final String message = event.getBuffer().replaceAll("[\\w]{1,}:", "").toLowerCase();

				for (final String command : commandsModule.getCommands()) {
					if (message.startsWith(command)) {
						final HamsterPlayer hamsterPlayer = hamsterPlayerManager.get(player);

						exploitPlayer.punish(commandsModule, hamsterPlayer, null, commandsModule.getPunishments(), 1);

						event.setCancelled(true);
						break;
					}
				}
			}
		}
	}
}