package dev._2lstudios.exploitfixer.bukkit.listener;

import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerLoginEvent;
import org.bukkit.plugin.Plugin;
import org.bukkit.scheduler.BukkitScheduler;

import dev._2lstudios.hamsterapi.HamsterAPI;
import dev._2lstudios.hamsterapi.hamsterplayer.HamsterPlayer;
import dev._2lstudios.exploitfixer.bukkit.utils.VersionUtil;
import dev._2lstudios.exploitfixer.bukkit.exploit.BukkitExploitPlayer;
import dev._2lstudios.exploitfixer.bukkit.managers.ExploitPlayerManager;
import dev._2lstudios.exploitfixer.bukkit.managers.ModuleManager;
import dev._2lstudios.exploitfixer.shared.modules.ConnectionModule;
import dev._2lstudios.exploitfixer.bukkit.modules.BukkitMessagesModule;
import dev._2lstudios.exploitfixer.bukkit.modules.BukkitNotificationsModule;

import java.net.InetAddress;
import java.util.UUID;

public class PlayerLoginListener implements Listener {
	private final Plugin plugin;
	private final BukkitNotificationsModule notificationsModule;
	private final BukkitMessagesModule messagesModule;
	private final ConnectionModule connectionModule;
	private final ExploitPlayerManager exploitPlayerManager;

	PlayerLoginListener(final Plugin plugin, final ModuleManager moduleManager) {
		this.plugin = plugin;
		this.connectionModule = moduleManager.getConnectionModule();
		this.notificationsModule = moduleManager.getNotificationsModule();
		this.messagesModule = moduleManager.getMessagesModule();
		this.exploitPlayerManager = moduleManager.getExploitPlayerManager();
	}

	@EventHandler(priority = EventPriority.LOWEST, ignoreCancelled = true)
	public void onPlayerLogin(final PlayerLoginEvent event) {
		final Player player = event.getPlayer();
		final String playerName = player.getName();
		final InetAddress address = event.getAddress();
		final String locale = VersionUtil.getLocale(player);

		if (connectionModule.isNullAddressEnabled() && address == null) {
			final String nullAddressKickMessage = messagesModule.getKickMessage("nulladdress", locale);

			event.setKickMessage(nullAddressKickMessage);
			event.setResult(PlayerLoginEvent.Result.KICK_OTHER);
		} else {
			final UUID originalUUID = player.getUniqueId();
			final BukkitExploitPlayer exploitPlayer = exploitPlayerManager.get(player);

			if (connectionModule.isUUIDSpoofEnabled()) {
				final BukkitScheduler scheduler = plugin.getServer().getScheduler();

				scheduler.runTaskAsynchronously(plugin, () -> {
					final UUID offlineUUID = UUID.nameUUIDFromBytes(("OfflinePlayer:" + playerName).getBytes());

					if (!originalUUID.equals(offlineUUID)) {
						final UUID onlineUUID = exploitPlayer.getOnlineUUID();

						if (onlineUUID == null || !originalUUID.equals(onlineUUID)) {
							final HamsterPlayer hamsterPlayer = HamsterAPI.getInstance().getHamsterPlayerManager()
									.get(player);
							final String uuidSpoofKickMessage = messagesModule.getKickMessage("uuidspoof", locale);

							event.setKickMessage(uuidSpoofKickMessage);
							event.setResult(PlayerLoginEvent.Result.KICK_OTHER);
							hamsterPlayer.disconnect(uuidSpoofKickMessage);
							hamsterPlayer.closeChannel();
						}
					}

					exploitPlayer.setLogged(true);
				});
			} else {
				exploitPlayer.setLogged(true);
			}
		}

		if (player.hasPermission("exploitfixer.notifications")) {
			notificationsModule.setNotifications(playerName, true);
		}
	}
}
