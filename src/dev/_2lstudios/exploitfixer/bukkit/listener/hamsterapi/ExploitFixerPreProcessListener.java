package dev._2lstudios.exploitfixer.bukkit.listener.hamsterapi;

import java.util.logging.Logger;

import org.bukkit.entity.Player;
import org.bukkit.plugin.Plugin;

import dev._2lstudios.exploitfixer.bukkit.instanceables.ExploitPlayer;
import dev._2lstudios.exploitfixer.bukkit.managers.ExploitPlayerManager;
import dev._2lstudios.exploitfixer.bukkit.managers.ModuleManager;
import dev._2lstudios.exploitfixer.bukkit.modules.CustomPayloadModule;
import dev._2lstudios.exploitfixer.bukkit.modules.NotificationsModule;
import dev._2lstudios.exploitfixer.bukkit.modules.PacketsModule;
import dev._2lstudios.hamsterapi.HamsterAPI;
import dev._2lstudios.hamsterapi.hamsterplayer.HamsterPlayer;
import dev._2lstudios.hamsterapi.interfaces.PreProcessListener;
import dev._2lstudios.hamsterapi.wrappers.EventWrapper;
import io.netty.buffer.ByteBuf;

public class ExploitFixerPreProcessListener implements PreProcessListener {
    private final Plugin plugin;
    private final CustomPayloadModule customPayloadModule;
    private final ExploitPlayerManager exploitPlayerManager;
    private final NotificationsModule notificationsModule;
    private final PacketsModule packetsModule;

    ExploitFixerPreProcessListener(final Plugin plugin, final ModuleManager moduleManager) {
        HamsterAPI.getInstance().getBufferIO();
        this.plugin = plugin;
        this.customPayloadModule = moduleManager.getCustomPayloadModule();
        this.exploitPlayerManager = moduleManager.getExploitPlayerManager();
        this.notificationsModule = moduleManager.getNotificationsModule();
        this.packetsModule = moduleManager.getPacketsModule();
    }

    @Override
    public void onPacketDecode(final EventWrapper event) {
        if (!event.isCancelled()) {
            final Logger logger = plugin.getLogger();
            final Player player = event.getPlayer();

            if (player != null && player.isOnline()) {
                final HamsterPlayer hamsterPlayer = event.getHamsterPlayer();
                final ExploitPlayer exploitPlayer = exploitPlayerManager.get(player);
                final int dataBytes = packetsModule.getDataBytes();
                final double dataVls = packetsModule.getDataVls();
                final String playerName = player.getName();
                final ByteBuf byteBuf = event.getByteBuf().copy();

                if (byteBuf.capacity() > dataBytes) {
                    if (notificationsModule.isDebug()) {
                        logger.info("[Decoder] " + playerName + " sent a packet that exceeds size limit! Max: "
                                + dataBytes + " Vls: " + dataVls);
                    }

                    event.setCancelled(true);
                    exploitPlayer.addVls(plugin, event, hamsterPlayer, customPayloadModule, dataVls);

                    return;
                }
            } else if (packetsModule.isOffline()) {
                if (notificationsModule.isDebug()) {
                    if (player == null) {
                        logger.info("OFFLINEPLAYER sent a packet while offline!");
                    } else {
                        logger.info(player.getName() + " sent a packet while offline!");
                    }
                }

                event.setCancelled(true);
                event.close();
            }
        }
    }
}