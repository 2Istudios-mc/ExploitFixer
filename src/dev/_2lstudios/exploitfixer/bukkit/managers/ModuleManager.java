package dev._2lstudios.exploitfixer.bukkit.managers;

import java.util.logging.Level;

import org.bukkit.Server;
import org.bukkit.configuration.Configuration;
import org.bukkit.plugin.Plugin;

import dev._2lstudios.exploitfixer.bukkit.modules.CommandsModule;
import dev._2lstudios.exploitfixer.bukkit.modules.ConnectionModule;
import dev._2lstudios.exploitfixer.bukkit.modules.CustomPayloadModule;
import dev._2lstudios.exploitfixer.bukkit.modules.ItemsFixModule;
import dev._2lstudios.exploitfixer.bukkit.modules.MessagesModule;
import dev._2lstudios.exploitfixer.bukkit.modules.NotificationsModule;
import dev._2lstudios.exploitfixer.bukkit.modules.PacketsModule;

public class ModuleManager {
	private Plugin plugin;
	private final CommandsModule commandsModule;
	private final ConnectionModule connectionModule;
	private final CustomPayloadModule customPayloadModule;
	private final ItemsFixModule itemsFixModule;
	private final MessagesModule messagesModule;
	private final NotificationsModule notificationsModule;
	private final PacketsModule packetsModule;
	private final ExploitPlayerManager exploitPlayerManager;

	public ModuleManager(final Plugin plugin, final Configuration configYml, final Configuration messagesYml) {
		this.plugin = plugin;
		this.commandsModule = new CommandsModule(configYml);
		this.connectionModule = new ConnectionModule(configYml);
		this.customPayloadModule = new CustomPayloadModule(plugin, this, configYml);
		this.itemsFixModule = new ItemsFixModule(plugin, configYml);
		this.messagesModule = new MessagesModule(plugin.getDescription().getVersion(), messagesYml);
		this.notificationsModule = new NotificationsModule(plugin.getServer().getConsoleSender(), configYml);
		this.packetsModule = new PacketsModule(plugin, this, configYml);
		this.exploitPlayerManager = new ExploitPlayerManager(plugin, plugin.getServer(), this);
	}

	public void reload(final Configuration configYml, final Configuration messagesYml, final Configuration spigotYml) {
		try {
			this.commandsModule.reload(configYml);
			this.connectionModule.reload(configYml);
			this.customPayloadModule.reload(configYml);
			this.itemsFixModule.reload(configYml);
			this.messagesModule.reload(messagesYml);
			this.notificationsModule.reload(configYml);
			this.packetsModule.reload(configYml);
			this.exploitPlayerManager.reload();
		} catch (final NullPointerException e) {
			final Server server = plugin.getServer();

			server.getLogger().log(Level.SEVERE,
					"Your ExploitFixer configuration is wrong, please reset it or the plugin wont work!");
			server.getPluginManager().disablePlugin(plugin);

			e.printStackTrace();
		}
	}

	public CommandsModule getCommandsModule() {
		return commandsModule;
	}

	public ConnectionModule getConnectionModule() {
		return connectionModule;
	}

	public CustomPayloadModule getCustomPayloadModule() {
		return customPayloadModule;
	}

	public ItemsFixModule getItemsFixModule() {
		return itemsFixModule;
	}

	public MessagesModule getMessagesModule() {
		return messagesModule;
	}

	public NotificationsModule getNotificationsModule() {
		return notificationsModule;
	}

	public ExploitPlayerManager getExploitPlayerManager() {
		return exploitPlayerManager;
	}

	public PacketsModule getPacketsModule() {
		return packetsModule;
	}
}
