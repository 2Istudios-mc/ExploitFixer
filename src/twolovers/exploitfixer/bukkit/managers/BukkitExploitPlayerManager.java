package twolovers.exploitfixer.bukkit.managers;

import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import twolovers.exploitfixer.bukkit.instanceables.BukkitExploitPlayer;
import twolovers.exploitfixer.interfaces.instanceables.ExploitPlayer;
import twolovers.exploitfixer.interfaces.managers.ExploitPlayerManager;
import twolovers.exploitfixer.interfaces.managers.ModuleManager;

import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;

public class BukkitExploitPlayerManager implements ExploitPlayerManager {
	final private ModuleManager moduleManager;
	final private Collection<ExploitPlayer> exploitPlayers = new HashSet<>();
	private int punishments = 0;

	public BukkitExploitPlayerManager(final ModuleManager moduleManager) {
		this.moduleManager = moduleManager;

		for (final Player player : Bukkit.getOnlinePlayers())
			addPlayer(player.getName());
	}

	public ExploitPlayer getPlayer(final String playerName) {
		if (playerName != null)
			for (final ExploitPlayer exploitPlayer : exploitPlayers)
				if (playerName.equals(exploitPlayer.getName()))
					return exploitPlayer;

		return null;
	}

	public void addPlayer(final String playerName) {
		if (getPlayer(playerName) == null)
			exploitPlayers.add(new BukkitExploitPlayer(playerName, moduleManager));
	}

	public void reload() {
		final Iterator<ExploitPlayer> iterator = exploitPlayers.iterator();
		boolean hasRemoved = false;

		while (iterator.hasNext()) {
			final ExploitPlayer exploitPlayer = iterator.next();
			final Player player = Bukkit.getPlayer(exploitPlayer.getName());

			if (player == null || !player.isOnline()) {
				iterator.remove();

				if (!hasRemoved) {
					System.out.println("[ExploitFixer] Cleared unused cached players!");
					hasRemoved = true;
				}
			}
		}

		punishments = 0;
	}

	public Collection<ExploitPlayer> getExploitPlayers() {
		return exploitPlayers;
	}

	@Override
	public int getPunishments() {
		return punishments;
	}

	@Override
	public void addPunishment() {
		punishments++;
	}

	@Override
	public void removePlayer(String name) {
		exploitPlayers.remove(getPlayer(name));
	}
}
