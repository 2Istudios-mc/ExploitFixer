package twolovers.exploitfixer.bukkit.listeners;

import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.SignChangeEvent;
import org.bukkit.plugin.Plugin;
import twolovers.exploitfixer.interfaces.managers.ExploitPlayerManager;
import twolovers.exploitfixer.interfaces.managers.ModuleManager;
import twolovers.exploitfixer.interfaces.modules.DuplicationModule;
import twolovers.exploitfixer.interfaces.modules.SignsModule;

import java.util.regex.Pattern;

public class SignChangeListener implements Listener {
	private final Plugin plugin;
	private final DuplicationModule duplicationModule;
	private final SignsModule signsModule;
	private final ExploitPlayerManager exploitPlayerManager;
	private final Pattern pattern = Pattern.compile("[^¸È·ÌÛ˙Ò¡…Õ”⁄‹A-Za-z.!@?#\"$%&ß:;()—ø° *'+,/\\-=\\[\\]^_{|}~`<>\\x00-\\x7F]+");

	public SignChangeListener(final Plugin plugin, final ModuleManager moduleManager) {
		this.plugin = plugin;
		this.duplicationModule = moduleManager.getDuplicationModule();
		this.signsModule = moduleManager.getSignsModule();
		this.exploitPlayerManager = moduleManager.getExploitPlayerManager();
	}

	@EventHandler(priority = EventPriority.LOWEST)
	public void onSignChange(final SignChangeEvent event) {
		for (String line : event.getLines()) {
			if (duplicationModule.isEnabled()) {
				if (pattern.matcher(line).find()) {
					final Player player = event.getPlayer();

					exploitPlayerManager.getPlayer(player.getName()).punish(plugin, duplicationModule, player);
					event.setCancelled(true);
					return;
				}
			}

			if (signsModule.isEnabled()) {
				if (line.length() >= 46) {
					final Player player = event.getPlayer();

					exploitPlayerManager.getPlayer(player.getName()).punish(plugin, signsModule, player);
					event.setCancelled(true);
					return;
				}
			}
		}
	}
}