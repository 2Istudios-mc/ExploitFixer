package twolovers.exploitfixer.bukkit.listeners;

import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.SignChangeEvent;
import org.bukkit.plugin.Plugin;
import twolovers.exploitfixer.interfaces.instanceables.ExploitPlayer;
import twolovers.exploitfixer.interfaces.managers.ExploitPlayerManager;
import twolovers.exploitfixer.interfaces.managers.ModuleManager;
import twolovers.exploitfixer.interfaces.modules.SignsModule;

import java.nio.charset.StandardCharsets;
import java.util.UUID;

public class SignChangeListener implements Listener {
	private final Plugin plugin;
	private final SignsModule signsModule;
	private final ExploitPlayerManager exploitPlayerManager;

	public SignChangeListener(final Plugin plugin, final ModuleManager moduleManager) {
		this.plugin = plugin;
		this.signsModule = moduleManager.getSignsModule();
		this.exploitPlayerManager = moduleManager.getExploitPlayerManager();
	}

	@EventHandler(priority = EventPriority.LOWEST, ignoreCancelled = true)
	public void onSignChange(final SignChangeEvent event) {
		if (signsModule.isEnabled()) {
			final Player player = event.getPlayer();

			if (player != null) {
				final UUID uuid = player.getUniqueId();
				final ExploitPlayer exploitPlayer = exploitPlayerManager.get(uuid, player);

				for (final String line : event.getLines()) {
					if (line.length() >= 46) {
						exploitPlayer.addVls(plugin, event, player, signsModule, 1);
						break;
					} else if (line.getBytes(StandardCharsets.UTF_8).length > signsModule.getMaxBytes()) {
						exploitPlayer.addVls(plugin, event, player, signsModule, 1);
						break;
					}
				}
			} else
				event.setCancelled(true);
		}
	}
}