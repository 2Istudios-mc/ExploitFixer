package twolovers.exploitfixer.bukkit.listeners;

import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerLoginEvent;
import org.bukkit.plugin.Plugin;
import twolovers.exploitfixer.bukkit.utils.VersionUtil;
import twolovers.exploitfixer.interfaces.instanceables.ExploitPlayer;
import twolovers.exploitfixer.interfaces.managers.ExploitPlayerManager;
import twolovers.exploitfixer.interfaces.managers.ModuleManager;
import twolovers.exploitfixer.interfaces.modules.MessagesModule;
import twolovers.exploitfixer.interfaces.modules.NotificationsModule;
import twolovers.exploitfixer.interfaces.modules.UUIDSpoofModule;

import java.util.UUID;

public class PlayerLoginListener implements Listener {
	private final Plugin plugin;
	private final UUIDSpoofModule uuidSpoofModule;
	private final NotificationsModule notificationsModule;
	private final MessagesModule messagesModule;
	private final ExploitPlayerManager exploitPlayerManager;

	public PlayerLoginListener(final Plugin plugin, final ModuleManager moduleManager) {
		this.plugin = plugin;
		this.uuidSpoofModule = moduleManager.getUUIDSpoofModule();
		this.notificationsModule = moduleManager.getNotificationsModule();
		this.messagesModule = moduleManager.getMessagesModule();
		this.exploitPlayerManager = moduleManager.getExploitPlayerManager();
	}

	@EventHandler(priority = EventPriority.LOWEST, ignoreCancelled = true)
	public void onPlayerLogin(final PlayerLoginEvent event) {
		final Player player = event.getPlayer();

		exploitPlayerManager.add(player.getName());

		if (uuidSpoofModule.isEnabled()) {
			final String locale;

			if (VersionUtil.isOneDotFifteen())
				locale = player.getLocale().substring(0, 2);
			else
				locale = player.spigot().getLocale().substring(0, 2);

			plugin.getServer().getScheduler().runTaskAsynchronously(plugin, () -> {
				final String playerName = player.getName();
				final String originalUUID = player.getUniqueId().toString().replace("-", "");
				final String offlineUUID = UUID.nameUUIDFromBytes(("OfflinePlayer:" + playerName).getBytes()).toString().replace("-", "");

				if (!originalUUID.contains(offlineUUID)) {
					final ExploitPlayer exploitPlayer = exploitPlayerManager.get(player.getName());
					final String onlineUUID = exploitPlayer.getOnlineUUID();

					if (onlineUUID != null && !onlineUUID.contains(originalUUID)) {
						event.setKickMessage(messagesModule.getKickMessage(uuidSpoofModule, locale));
						event.setResult(PlayerLoginEvent.Result.KICK_OTHER);
						exploitPlayer.addVls(plugin, event, player, uuidSpoofModule, 1);
					}
				}
			});
		}

		if (player.hasPermission("exploitfixer.notifications")) {
			notificationsModule.setNotifications(player, true);
		}
	}
}
