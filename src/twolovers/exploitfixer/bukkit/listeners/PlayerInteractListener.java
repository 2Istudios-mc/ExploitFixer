package twolovers.exploitfixer.bukkit.listeners;

import org.bukkit.Material;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.inventory.ItemStack;
import twolovers.exploitfixer.interfaces.instanceables.ExploitPlayer;
import twolovers.exploitfixer.interfaces.managers.ExploitPlayerManager;
import twolovers.exploitfixer.interfaces.managers.ModuleManager;
import twolovers.exploitfixer.interfaces.modules.CustomPayloadModule;
import twolovers.exploitfixer.interfaces.modules.PacketsModule;
import twolovers.exploitfixer.shared.enums.Identity;

public class PlayerInteractListener implements Listener {
	private final ExploitPlayerManager exploitPlayerManager;
	private final PacketsModule packetsModule;
	private final CustomPayloadModule customPayloadModule;

	public PlayerInteractListener(final ModuleManager moduleManager) {
		this.packetsModule = moduleManager.getPacketsModule();
		this.customPayloadModule = moduleManager.getCustomPayloadModule();
		exploitPlayerManager = moduleManager.getExploitPlayerManager();
	}

	@EventHandler
	public void onPlayerInteract(final PlayerInteractEvent event) {
		if (!event.isCancelled() && packetsModule.isEnabled()) {
			final String playerName = event.getPlayer().getName();
			final ItemStack item = event.getItem();

			if (item != null) {
				final Material material = item.getType();

				if (material == Material.WRITTEN_BOOK || material == Material.BOOK_AND_QUILL) {
					final ExploitPlayer exploitPlayer = exploitPlayerManager.getPlayer(playerName);
					final Identity name = Identity.INTERACT_BOOK;

					exploitPlayer.addViolation(name);

					if (exploitPlayer.getViolations(name) > packetsModule.getLimit(name))
						event.setCancelled(true);
				}
			}

			final ExploitPlayer exploitPlayer = exploitPlayerManager.getPlayer(playerName);
			final Identity identifier = Identity.INTERACT;

			exploitPlayer.addViolation(identifier);

			if (exploitPlayer.getViolations(identifier) > packetsModule.getLimit(identifier))
				event.setCancelled(true);
		}
	}
}