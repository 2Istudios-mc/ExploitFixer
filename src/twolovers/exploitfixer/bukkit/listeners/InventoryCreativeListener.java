package twolovers.exploitfixer.bukkit.listeners;

import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryCreativeEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.inventory.meta.PotionMeta;
import org.bukkit.plugin.Plugin;
import twolovers.exploitfixer.interfaces.managers.ExploitPlayerManager;
import twolovers.exploitfixer.interfaces.managers.ModuleManager;
import twolovers.exploitfixer.interfaces.modules.ItemsModule;
import twolovers.exploitfixer.interfaces.modules.NotificationsModule;

public class InventoryCreativeListener implements Listener {
	private final Plugin plugin;
	private final ItemsModule itemsModule;
	private final NotificationsModule notificationsModule;
	private final ExploitPlayerManager exploitPlayerManager;

	public InventoryCreativeListener(final Plugin plugin, final ModuleManager moduleManager) {
		this.plugin = plugin;
		this.itemsModule = moduleManager.getItemsModule();
		this.notificationsModule = moduleManager.getNotificationsModule();
		this.exploitPlayerManager = moduleManager.getExploitPlayerManager();
	}

	@EventHandler
	public void onInventoryCreative(final InventoryCreativeEvent event) {
		if (!event.isCancelled() && itemsModule.isEnabled()) {
			final ItemStack itemStack = event.getCursor();
			final ItemMeta itemMeta = itemStack.getItemMeta();

			if (itemStack.hasItemMeta() && itemMeta instanceof PotionMeta && !((PotionMeta) itemMeta).getCustomEffects().isEmpty())
				event.setCancelled(true);

			if (!event.isCancelled() && itemMeta != null) {
				final Player player = (Player) event.getWhoClicked();
				final int itemMetaLenght = itemMeta.toString().length();

				if (itemMetaLenght > 16384) {
					event.setCancelled(true);
					exploitPlayerManager.getPlayer(player.getName()).punish(plugin, itemsModule, player);
				} else if ((itemMeta.hasDisplayName() && itemMeta.getDisplayName().length() > 32) || (itemMeta.hasLore() && itemMeta.getLore().size() > 16)) {
					event.setCancelled(true);
					exploitPlayerManager.getPlayer(player.getName()).punish(plugin, itemsModule, player);
				}
			}

			if (!event.isCancelled() && !itemStack.getEnchantments().isEmpty()) {
				final Player player = (Player) event.getWhoClicked();

				for (int enchantmentLevel : itemStack.getEnchantments().values()) {
					if (enchantmentLevel > 10) {
						event.setCancelled(true);
						exploitPlayerManager.getPlayer(player.getName()).punish(plugin, itemsModule, player);
						break;
					}
				}
			}
		}
	}
}