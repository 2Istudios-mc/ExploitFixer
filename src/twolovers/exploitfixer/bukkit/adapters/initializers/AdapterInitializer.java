package twolovers.exploitfixer.bukkit.adapters.initializers;

import com.comphenix.protocol.PacketType;
import com.comphenix.protocol.ProtocolLibrary;
import com.comphenix.protocol.ProtocolManager;
import com.comphenix.protocol.events.ListenerPriority;
import com.comphenix.protocol.events.PacketAdapter;
import com.comphenix.protocol.events.PacketEvent;
import org.bukkit.plugin.Plugin;
import twolovers.exploitfixer.bukkit.adapters.*;
import twolovers.exploitfixer.interfaces.managers.ModuleManager;
import twolovers.exploitfixer.interfaces.modules.PacketsModule;

public class AdapterInitializer {
	public AdapterInitializer(final Plugin plugin, final ModuleManager moduleManager) {
		final ProtocolManager protocolManager = ProtocolLibrary.getProtocolManager();
		final PacketsModule packetsModule = moduleManager.getPacketsModule();

		protocolManager.removePacketListeners(plugin);

		for (final PacketType packetType : PacketType.Play.Client.getInstance()) {
			if (packetsModule.isEnabled())
				protocolManager.addPacketListener(new PacketAdapter(plugin, ListenerPriority.LOWEST, packetType) {
					@Override
					public void onPacketReceiving(final PacketEvent event) {
						packetsModule.checkPacket(event);
					}
				});
		}

		protocolManager.addPacketListener(new BlockDigPacketAdapter(plugin, ListenerPriority.LOWEST, PacketType.Play.Client.BLOCK_DIG, moduleManager));
		protocolManager.addPacketListener(new BlockPlacePacketAdapter(plugin, ListenerPriority.LOWEST, PacketType.Play.Client.BLOCK_PLACE, moduleManager));
		protocolManager.addPacketListener(new CustomPayloadPacketAdapter(plugin, ListenerPriority.LOWEST, PacketType.Play.Client.CUSTOM_PAYLOAD, moduleManager));
		protocolManager.addPacketListener(new SetCreativeSlotPacketAdapter(plugin, ListenerPriority.LOWEST, PacketType.Play.Client.SET_CREATIVE_SLOT, moduleManager));
		protocolManager.addPacketListener(new WindowClickPacketAdapter(plugin, ListenerPriority.LOWEST, PacketType.Play.Client.WINDOW_CLICK, moduleManager));
	}
}
