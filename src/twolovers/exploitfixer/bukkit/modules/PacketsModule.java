package twolovers.exploitfixer.bukkit.modules;

import java.util.HashMap;
import java.util.Map;

import org.bukkit.configuration.Configuration;
import org.bukkit.configuration.ConfigurationSection;
import org.bukkit.plugin.Plugin;

import twolovers.exploitfixer.bukkit.instanceables.Violations;
import twolovers.exploitfixer.bukkit.managers.ModuleManager;
import twolovers.exploitfixer.shared.interfaces.ViolationModule;

public class PacketsModule implements ViolationModule {
	private final Map<String, Double> multipliers = new HashMap<>();
	private Violations violations;
	private String name;
	private double dataVls, blockDigVls, blockPlaceVls, setCreativeSlot, windowClick, cancelVls, reduceVls;
	private int dataBytesBook, dataBytesSign, dataBytes, dataBytesDivider;
	private boolean enabled, offline;

	public PacketsModule(final Plugin plugin, final ModuleManager moduleManager, final Configuration configYml) {
		reload(configYml);
	}

	final public void reload(final Configuration configYml) {
		final ConfigurationSection configurationSection = configYml.getConfigurationSection("packets.multipliers");
		final String name = "packets";

		this.name = "Packets";
		this.enabled = configYml.getBoolean(name + ".enabled");
		this.cancelVls = configYml.getDouble(name + ".cancel_vls");
		this.reduceVls = configYml.getDouble(name + ".reduce_vls");
		this.offline = configYml.getBoolean(name + ".offline");
		this.dataVls = configYml.getDouble(name + ".data.vls");
		this.dataBytes = configYml.getInt(name + ".data.bytes", 24000);
		this.dataBytesBook = configYml.getInt(name + ".data.bytes_book", 268);
		this.dataBytesSign = configYml.getInt(name + ".data.bytes_sign", 47);
		this.dataBytesDivider = configYml.getInt(name + ".data.bytes_divider", 200);
		this.windowClick = configYml.getDouble(name + ".window_click");
		this.blockPlaceVls = configYml.getDouble(name + ".block_place");
		this.blockDigVls = configYml.getDouble(name + ".block_dig");
		this.setCreativeSlot = configYml.getDouble(name + ".set_creative_slot");
		this.violations = new Violations(configYml.getConfigurationSection(name + ".violations"));

		for (final String key : configurationSection.getKeys(false))
			multipliers.put(key, configurationSection.getDouble(key));
	}

	@Override
	public boolean isEnabled() {
		return enabled;
	}

	@Override
	public String getName() {
		return this.name;
	}

	@Override
	public double getCancelVls() {
		return cancelVls;
	}

	@Override
	public double getReduceVls() {
		return reduceVls;
	}

	@Override
	public Violations getViolations() {
		return this.violations;
	}

	public double getMultiplier(final String packetName) {
		return multipliers.getOrDefault(packetName, multipliers.getOrDefault("PacketPlayInOther", 1D));
	}

	public double getWindowClick() {
		return this.windowClick;
	}

	public double getSetCreativeSlot() {
		return this.setCreativeSlot;
	}

	public double getBlockDigVls() {
		return this.blockDigVls;
	}

	public double getBlockPlaceVls() {
		return this.blockPlaceVls;
	}

	public double getDataVls() {
		return this.dataVls;
	}

	public int getDataBytes() {
		return this.dataBytes;
	}

	public int getDataBytesBook() {
		return this.dataBytesBook;
	}

	public int getDataBytesSign() {
		return this.dataBytesSign;
	}

	public boolean isOffline() {
		return this.offline;
	}

	public int getDataBytesDivider() {
		return this.dataBytesDivider;
	}
}
