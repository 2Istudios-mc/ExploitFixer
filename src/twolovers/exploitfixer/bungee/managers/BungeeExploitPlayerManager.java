package twolovers.exploitfixer.bungee.managers;

import net.md_5.bungee.BungeeCord;
import twolovers.exploitfixer.bungee.instanceables.BungeeExploitPlayer;
import twolovers.exploitfixer.interfaces.instanceables.ExploitPlayer;
import twolovers.exploitfixer.interfaces.managers.ExploitPlayerManager;
import twolovers.exploitfixer.interfaces.managers.ModuleManager;

import java.util.Collection;
import java.util.HashSet;

public class BungeeExploitPlayerManager implements ExploitPlayerManager {
	final private ModuleManager moduleManager;
	final private HashSet<ExploitPlayer> exploitPlayers = new HashSet<>();
	private int punishments = 0;

	public BungeeExploitPlayerManager(final ModuleManager moduleManager) {
		this.moduleManager = moduleManager;
	}

	public ExploitPlayer getPlayer(final String playerName) {
		if (playerName != null)
			for (final ExploitPlayer exploitPlayer : exploitPlayers)
				if (playerName.equals(exploitPlayer.getName()))
					return exploitPlayer;

		return null;
	}

	public void addPlayer(final String playerName) {
		if (getPlayer(playerName) == null)
			exploitPlayers.add(new BungeeExploitPlayer(playerName, moduleManager));
	}

	public void reload() {
		for (ExploitPlayer exploitPlayer : exploitPlayers)
			if (BungeeCord.getInstance().getPlayer(exploitPlayer.getName()) == null)
				exploitPlayers.remove(exploitPlayer);

		punishments = 0;
	}

	public Collection<ExploitPlayer> getExploitPlayers() {
		return exploitPlayers;
	}

	@Override
	public int getPunishments() {
		return punishments;
	}

	@Override
	public void addPunishment() {
		punishments++;
	}

	@Override
	public void removePlayer(String name) {
		exploitPlayers.remove(getPlayer(name));
	}
}
