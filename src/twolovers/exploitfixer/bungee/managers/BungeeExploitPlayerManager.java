package twolovers.exploitfixer.bungee.managers;

import net.md_5.bungee.BungeeCord;
import net.md_5.bungee.api.ProxyServer;
import net.md_5.bungee.api.connection.ProxiedPlayer;
import twolovers.exploitfixer.bungee.instanceables.BungeeExploitPlayer;
import twolovers.exploitfixer.interfaces.instanceables.ExploitPlayer;
import twolovers.exploitfixer.interfaces.managers.ExploitPlayerManager;
import twolovers.exploitfixer.interfaces.managers.ModuleManager;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.UUID;
import java.util.logging.Level;

public class BungeeExploitPlayerManager implements ExploitPlayerManager {
	private final ModuleManager moduleManager;
	private final ProxyServer proxy;
	private final Map<UUID, ExploitPlayer> exploitPlayers = new HashMap<>();
	private int punishments = 0;

	BungeeExploitPlayerManager(final ProxyServer proxy, final ModuleManager moduleManager) {
		this.moduleManager = moduleManager;
		this.proxy = proxy;

		reload();
	}

	@Override
	public int getSize() {
		return exploitPlayers.size();
	}

	@Override
	public int getPunishments() {
		return punishments;
	}

	@Override
	public ExploitPlayer get(final UUID uuid) {
		ExploitPlayer exploitPlayer = exploitPlayers.getOrDefault(uuid, null);

		if (exploitPlayer == null) {
			final ProxiedPlayer player = BungeeCord.getInstance().getPlayer(uuid);

			exploitPlayer = new BungeeExploitPlayer(player.getName(), moduleManager);
			exploitPlayers.put(uuid, exploitPlayer);
		}

		return exploitPlayer;
	}

	@Override
	public int addPunishment() {
		return ++punishments;
	}

	@Override
	public void reload() {
		exploitPlayers.clear();
	}

	@Override
	public void clear() {
		final BungeeCord bungeeCord = BungeeCord.getInstance();
		final Iterator<UUID> iterator = exploitPlayers.keySet().iterator();
		boolean cleared = false;

		while (iterator.hasNext()) {
			final UUID uuid = iterator.next();

			if (bungeeCord.getPlayer(uuid) == null) {
				iterator.remove();
				cleared = true;
			}
		}

		if (cleared) {
			bungeeCord.getLogger().log(Level.INFO, "[ExploitFixer] Cleared unused cached players!");
		}
	}
}
