package twolovers.exploitfixer.bungee.managers;

import net.md_5.bungee.api.plugin.Plugin;
import net.md_5.bungee.config.Configuration;
import twolovers.exploitfixer.bungee.modules.*;
import twolovers.exploitfixer.interfaces.managers.ExploitPlayerManager;
import twolovers.exploitfixer.interfaces.managers.ModuleManager;
import twolovers.exploitfixer.interfaces.modules.*;

public class BungeeModuleManager implements ModuleManager {
	private CommandsModule commandsModule;
	private CustomPayloadModule customPayloadModule;
	private MessagesModule messagesModule;
	private NotificationsModule notificationsModule;
	private ReloadableModule uuidSpoofModule, nullAddressModule;
	private ExploitPlayerManager exploitPlayerManager;

	public BungeeModuleManager(final Plugin plugin, final Configuration configYml, final Configuration messagesYml) {
		commandsModule = new BungeeCommandsModule(configYml);
		customPayloadModule = new BungeeCustomPayloadModule(plugin, this, configYml);
		messagesModule = new BungeeMessagesModule(plugin.getDescription().getVersion(), messagesYml);
		notificationsModule = new BungeeNotificationsModule(configYml);
		uuidSpoofModule = new BungeeUUIDSpoofModule(configYml);
		nullAddressModule = new BungeeNullAddressModule(configYml);
		exploitPlayerManager = new BungeeExploitPlayerManager(plugin.getProxy(), this);
	}

	@Override
	public void reload(final Object configYml, final Object messagesYml, final Object spigotYml) {
		commandsModule.reload(configYml);
		customPayloadModule.reload(configYml);
		messagesModule.reload(messagesYml);
		notificationsModule.reload(configYml);
		uuidSpoofModule.reload(configYml);
		exploitPlayerManager.reload();
	}

	@Override
	public CommandsModule getCommandsModule() {
		return commandsModule;
	}

	@Override
	public CustomPayloadModule getCustomPayloadModule() {
		return customPayloadModule;
	}

	@Override
	public ItemsFixModule getItemsFixModule() {
		return null;
	}

	@Override
	public MessagesModule getMessagesModule() {
		return messagesModule;
	}

	@Override
	public NotificationsModule getNotificationsModule() {
		return notificationsModule;
	}

	@Override
	public ExploitPlayerManager getExploitPlayerManager() {
		return exploitPlayerManager;
	}

	@Override
	public SignsModule getSignsModule() {
		return null;
	}

	@Override
	public PacketsModule getPacketsModule() {
		return null;
	}

	@Override
	public ReloadableModule getNullAddressModule() {
		return nullAddressModule;
	}

	@Override
	public ReloadableModule getUUIDSpoofModule() {
		return uuidSpoofModule;
	}
}
