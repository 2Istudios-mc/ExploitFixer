package twolovers.exploitfixer.bungee;

import net.md_5.bungee.api.plugin.Plugin;
import net.md_5.bungee.api.plugin.PluginManager;
import net.md_5.bungee.config.Configuration;
import twolovers.exploitfixer.bungee.commands.ExploitFixerCommand;
import twolovers.exploitfixer.bungee.listeners.ChatListener;
import twolovers.exploitfixer.bungee.listeners.DisconnectListener;
import twolovers.exploitfixer.bungee.listeners.PluginMessageListener;
import twolovers.exploitfixer.bungee.listeners.PostLoginListener;
import twolovers.exploitfixer.bungee.managers.BungeeModuleManager;
import twolovers.exploitfixer.bungee.utils.ConfigurationUtil;
import twolovers.exploitfixer.interfaces.managers.ExploitPlayerManager;
import twolovers.exploitfixer.interfaces.managers.ModuleManager;

import java.util.concurrent.TimeUnit;

public class ExploitFixer extends Plugin {
	private static ExploitFixer plugin;
	private ModuleManager moduleManager;

	public void onEnable() {
		plugin = this;

		final ConfigurationUtil configurationUtil = new ConfigurationUtil(this);

		configurationUtil.createConfiguration("%datafolder%/config.yml");
		configurationUtil.createConfiguration("%datafolder%/messages.yml");

		final Configuration configYml = configurationUtil.getConfiguration("%datafolder%/config.yml");
		final Configuration messagesYml = configurationUtil.getConfiguration("%datafolder%/messages.yml");

		this.moduleManager = new BungeeModuleManager(this, configYml, messagesYml);

		reload();

		getProxy().getScheduler().schedule(this, () -> {
			final ExploitPlayerManager exploitPlayerManager = moduleManager.getExploitPlayerManager();

			exploitPlayerManager.clear();
		}, 5, 5, TimeUnit.MINUTES);
	}

	public void reload() {
		final ConfigurationUtil configurationUtil = new ConfigurationUtil(this);

		configurationUtil.createConfiguration("%datafolder%/config.yml");
		configurationUtil.createConfiguration("%datafolder%/messages.yml");

		final Configuration configYml = configurationUtil.getConfiguration("%datafolder%/config.yml");
		final Configuration messagesYml = configurationUtil.getConfiguration("%datafolder%/messages.yml");
		moduleManager.reload(configYml, messagesYml, null);
		final PluginManager pluginManager = getProxy().getPluginManager();

		pluginManager.unregisterListeners(this);
		pluginManager.registerListener(this, new ChatListener(this, moduleManager));
		pluginManager.registerListener(this, new DisconnectListener(moduleManager));
		pluginManager.registerListener(this, new PluginMessageListener(moduleManager));
		pluginManager.registerListener(this, new PostLoginListener(this, moduleManager));

		pluginManager.unregisterCommands(this);
		pluginManager.registerCommand(this, new ExploitFixerCommand("exploitfixer", moduleManager));
		pluginManager.registerCommand(this, new ExploitFixerCommand("ef", moduleManager));
	}

	public static ExploitFixer getInstance() {
		return plugin;
	}
}